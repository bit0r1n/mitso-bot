import { UserRole, UserState } from '../../schemas/User'
import { AbstractHearsCommand, CommandContext, CommandUtils } from '../../utils/commandHelpers'
import { callbackIdBuild } from '../../utils/keyboards'
import { Markup } from 'telegraf'

export class SettingsCommand extends AbstractHearsCommand {
  constructor(utils: CommandUtils) {
    super([ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' ], utils)
  }

  async execute(ctx: CommandContext) {
    if (ctx.user.state !== UserState.MainMenu) return

    const isStudent = ctx.user.role !== UserRole.Teacher

    const settingsButtons = Markup.inlineKeyboard([
      [
        Markup.button.callback('–°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å', callbackIdBuild('settings', [ 'role' ])),
        Markup.button.callback(isStudent ? '–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É' : '–°–º–µ–Ω–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è',
          callbackIdBuild('settings', [ 'change_following' ])),
      ]
    ])

    await ctx.reply('üë° –í—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å', {
      reply_markup: settingsButtons.reply_markup
    })
  }
}